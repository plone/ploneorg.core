[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-5.0.x.cfg
    http://dist.plone.org/release/5.1b3/versions.cfg
    versions.cfg

parts +=
    omelette
    update_contributions
    get_downloads
    themepreview
    mrbob
    code-analysis
    codeintel
    coverage
    runcoverage

# do not let buildout choose any distribution randomly
allow-picked-versions = false

plone-series = 5.0
package-name = ploneorg.core
package-extras = [test]

extensions = mr.developer

eggs +=
    ploneorg.core
    authomatic
    plone.reload
    pas.plugins.authomatic
    collective.themefragments
    Products.PloneFormGen
    collective.recaptcha
    collective.isotope
    simplejson
    plone.formwidget.autocomplete

always-checkout = force
auto-checkout +=
    collective.badge
    collective.workspace
    plone.app.vulnerabilities
    ploneorg.theme
    Py-StackExchange
    pas.plugins.authomatic
    collective.isotope
    collective.recaptcha
# collective.transmogrifier
# quintagroup.transmogrifier
# ploneorg.migration
# plone.app.users

[sources]
ploneorg.theme = git git://github.com/plone/ploneorg.theme.git pushurl=git@github.com:plone/ploneorg.theme.git
Py-StackExchange = git git://github.com/lucjon/Py-StackExchange.git
plone.app.vulnerabilities = git git://github.com/plone/plone.app.vulnerabilities.git pushurl=git@github.com:plone/plone.app.vulnerabilities.git
collective.workspace = git git://github.com/collective/collective.workspace.git pushurl=git@github.com:collective/collective.workspace.git branch=plone5
collective.roster = git git://github.com/collective/collective.roster.git pushurl=git@github.com:collective/collective.roster.git
collective.badge = git git://github.com/collective/collective.badge.git pushurl=git@github.com:collective/collective.badge.git
pas.plugins.authomatic = git git://github.com/collective/pas.plugins.authomatic.git pushurl=git@github.com:collective/pas.plugins.authomatic.git
collective.isotope = git git://github.com/collective/collective.isotope.git pushurl=git@github.com:collective/collective.isotope.git
collective.recaptcha = git git://github.com/collective/collective.recaptcha.git
plone.app.changeownership = git git://github.com/collective/plone.app.changeownership.git pushurl=https://github.com/collective/plone.app.changeownership.git branch=new-owner-text-field

# plone.app.upgrade = git git://github.com/plone/plone.app.upgrade.git
# collective.transmogrifier = git git://github.com/collective/collective.transmogrifier.git pushurl=git@github.com:collective/collective.transmogrifier.git
# plone.app.users = git git://github.com/plone/plone.app.users.git pushurl=git@github.com:plone/plone.app.users.git
# quintagroup.transmogrifier = git git://github.com/collective/quintagroup.transmogrifier.git pushurl=git@github.com:collective/quintagroup.transmogrifier.git branch=plone5
# ploneorg.migration = git git://github.com/collective/ploneorg.migration.git pushurl=git@github.com:collective/ploneorg.migration.git

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
    ${test:eggs}

[update_contributions]
recipe = zc.recipe.egg:scripts
eggs = ploneorg.core

[get_downloads]
recipe = zc.recipe.egg:scripts
eggs = ploneorg.core

[themepreview]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    ${test:eggs}
    Sphinx
    sphinx-rtd-theme
    plone.app.robotframework
    sphinxcontrib-robotframework [docs]
scripts =
    sphinx-build

# Usage:
#
# ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core ROBOT_APPLY_PROFILES=ploneorg.core:default ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex bin/sphinx-build src/plone.themepreview/source build

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/ploneorg
utf8-header = True
prefer-single-quotes=True
imports = True
debug-statements = True
deprecated-aliases = True
zptlint = True

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${instance:eggs}
extra-paths =
    ${omelette:location}

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[runcoverage]
recipe = collective.recipe.template
input = inline:
    bin/coverage run ./bin/test
    bin/coverage html
output = bin/runcoverage
mode = 755
